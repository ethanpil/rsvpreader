name: Generate Bookmarklet and Update Page

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Required to push changes back to the repo
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies (uglify-js, jsdom)
        run: npm install uglify-js jsdom # Installs locally to node_modules

      - name: Minify rsvp-reader.js
        run: ./node_modules/.bin/uglifyjs rsvp-reader.js -o rsvp-reader.min.js -c -m --toplevel

      - name: Generate Bookmarklet HREF
        run: |
          cat <<EOF > generate-bookmarklet-href.js
          const fs = require('fs');
          const content = fs.readFileSync('rsvp-reader.min.js', 'utf8');
          const bookmarkletHref = 'javascript:' + encodeURIComponent(content.trim());
          fs.writeFileSync('bookmarklet_href.txt', bookmarkletHref);
          EOF
          node generate-bookmarklet-href.js
          echo "Bookmarklet HREF generated."

      - name: Update docs/index.html
        run: |
          cat <<EOF > update-html.js
          const fs = require('fs');
          const { JSDOM } = require('jsdom');

          const htmlPath = 'docs/index.html';
          const href = fs.readFileSync('bookmarklet_href.txt', 'utf8');
          let htmlContent = fs.readFileSync(htmlPath, 'utf8');
          const dom = new JSDOM(htmlContent);
          const document = dom.window.document;

          let link = document.getElementById('bookmarklet-link');
          const downloadsList = document.querySelector('#downloads ul');

          if (!downloadsList) {
              console.error('Could not find downloads list <ul> in HTML.');
              process.exit(1); // Exit if list not found
          }

          if (!link) {
              const listItem = document.createElement('li');
              link = document.createElement('a');
              link.id = 'bookmarklet-link';
              link.textContent = 'RSVP Reader Bookmarklet';
              listItem.appendChild(link);
              
              // Ensure the raw JS download link is always present and first
              let rawJsLi = document.querySelector('#downloads ul li a[href="../rsvp-reader.js"]');
              if (!rawJsLi) {
                  const rawLi = document.createElement('li');
                  const rawA = document.createElement('a');
                  rawA.href = "../rsvp-reader.js";
                  rawA.setAttribute("download", "rsvp-reader.js");
                  rawA.textContent = "Download rsvp-reader.js (Raw)";
                  rawLi.appendChild(rawA);
                  downloadsList.prepend(rawLi); // Add to the beginning
              }
              downloadsList.appendChild(listItem); // Add bookmarklet link after
          }
          link.href = href;
          fs.writeFileSync(htmlPath, dom.serialize());
          console.log('Updated HTML with new bookmarklet link.');
          EOF
          node update-html.js
          echo "docs/index.html updated."

      - name: Commit and push changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add docs/index.html rsvp-reader.min.js
          # Check if there are changes to commit
          if git diff --staged --quiet; then
            echo "No changes to commit."
          else
            git commit -m 'Workflow: Update bookmarklet and index.html'
            git push
            echo "Changes committed and pushed."
          fi
